{"version":3,"sources":["components/Home.js","components/Navbar.js","components/CountryPage.js","App.js","index.js"],"names":["Countries","React","lazy","Home","state","countriesData","searchInput","regionInput","handleSearch","e","setState","target","value","preventDefault","handleRegion","filterCountriesWithRegion","filter","country","region","axios","get","then","res","data","map","name","population","flag","capital","alpha3Code","this","countries","length","toLowerCase","includes","className","document","getElementsByClassName","onChange","type","placeholder","key","to","fallback","Component","Navbar","props","onClick","toggle","prevMode","darkMode","CountryPage","reduceObjects","objects","reduce","a","o","i","formatNumbers","n","toString","replace","checkIfExist","renderCountry","alt","src","subregion","nativeName","languages","currencies","topLevelDomain","href","id","match","params","country_id","history","goBack","withRouter","App","useState","JSON","parse","localStorage","getItem","setDarkMode","useEffect","setItem","stringify","body","style","backgroundColor","exact","path","component","rootElement","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.aa93f294.chunk.js","sourcesContent":["import React, { Component, Suspense } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Countries = React.lazy(() => import(\"./Countries\"));\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    countriesData: [],\r\n    searchInput: \"\",\r\n    regionInput: \"All\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"https://restcountries.eu/rest/v2/all\")\r\n      .then((res) =>\r\n        res.data.map((country) => ({\r\n          name: `${country.name}`,\r\n          population: `${country.population}`,\r\n          flag: `${country.flag}`,\r\n          region: `${country.region}`,\r\n          capital: `${country.capital}`,\r\n          alpha3Code: `${country.alpha3Code}`,\r\n        }))\r\n      )\r\n      .then((countriesData) => {\r\n        this.setState({ countriesData });\r\n      });\r\n  }\r\n\r\n  handleSearch = (e) => {\r\n    this.setState({ searchInput: e.target.value });\r\n    e.preventDefault();\r\n  };\r\n\r\n  handleRegion = (e) => {\r\n    this.setState({ regionInput: e.target.value });\r\n    e.preventDefault();\r\n  };\r\n\r\n  filterCountriesWithRegion = () => {\r\n    const { regionInput, countriesData } = this.state;\r\n    if (regionInput === \"All\") {\r\n      return countriesData;\r\n    } else {\r\n      return countriesData.filter((country) => {\r\n        return country.region === regionInput;\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { countriesData, searchInput } = this.state;\r\n    let countries = [];\r\n\r\n    if (countriesData.length > 0) {\r\n      countries = this.filterCountriesWithRegion();\r\n      if (searchInput.length > 0) {\r\n        countries = countries.filter((country) => {\r\n          return country.name.toLowerCase().includes(searchInput.toLowerCase());\r\n        });\r\n      }\r\n    } else {\r\n      countries = countriesData;\r\n    }\r\n    return (\r\n      <div\r\n        className={\r\n          document.getElementsByClassName(\"item-card\").length <= 5\r\n            ? \"main-container\"\r\n            : \"main-container\"\r\n        }\r\n      >\r\n        <div className=\"inputs-container\">\r\n          <input\r\n            onChange={this.handleSearch}\r\n            type=\"text\"\r\n            placeholder=\"Search country\"\r\n          />\r\n          <select onChange={this.handleRegion}>\r\n            <option value=\"All\">All</option>\r\n            <option value=\"Africa\">Africa</option>\r\n            <option value=\"Americas\">Americas</option>\r\n            <option value=\"Asia\">Asia</option>\r\n            <option value=\"Europe\">Europe</option>\r\n            <option value=\"Oceania\">Oceania</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"cards-container\">\r\n          {countries.length > 0 ? (\r\n            countries.map((country) => {\r\n              return (\r\n                <div key={country.alpha3Code} className=\"item-card\">\r\n                  <Link to={\"/country-lookup/\" + country.alpha3Code}>\r\n                    <Suspense fallback={<div></div>}>\r\n                      <Countries\r\n                        flag={country.flag}\r\n                        name={country.name}\r\n                        population={country.population}\r\n                        region={country.region}\r\n                        capital={country.capital}\r\n                      />\r\n                    </Suspense>\r\n                  </Link>\r\n                </div>\r\n              );\r\n            })\r\n          ) : (\r\n            <h3 className=\"not-found\">Country not found</h3>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <h1>Where in the world?</h1>\r\n      <div\r\n        className=\"toggle\"\r\n        onClick={() => props.toggle((prevMode) => !prevMode)}\r\n      >\r\n        {props.darkMode ? \"☀️ Light mode\" : \"🌙 Dark mode\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass CountryPage extends Component {\r\n  state = {\r\n    country: null,\r\n  };\r\n  componentDidMount() {\r\n    let id = this.props.match.params.country_id;\r\n    axios.get(`https://restcountries.eu/rest/v2/alpha/` + id).then((res) => {\r\n      this.setState({ country: res.data });\r\n    });\r\n  }\r\n\r\n  reduceObjects = (objects) => {\r\n    return objects.reduce((a, o, i) => {\r\n      if (i === 0) {\r\n        return o.name;\r\n      } else {\r\n        return a + \", \" + o.name;\r\n      }\r\n    }, \"\");\r\n  };\r\n\r\n  formatNumbers = (n) => {\r\n    return n.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\r\n  };\r\n\r\n  checkIfExist = (a) => {\r\n    if (a.length > 0) {\r\n      return a;\r\n    } else {\r\n      return <>N/A</>;\r\n    }\r\n  };\r\n\r\n  renderCountry = () => {\r\n    const { country } = this.state;\r\n    if (country === null) {\r\n      return <div className>Loading...</div>;\r\n    } else {\r\n      return (\r\n        <div className=\"info-container\">\r\n          <div>\r\n            <img alt={country.name + ` flag`} src={country.flag} />\r\n          </div>\r\n          <div className=\"country-info\">\r\n            <h1>{country.name}</h1>\r\n            <div className=\"country-sub-info\">\r\n              <div className=\"country-sub-info-col-1\">\r\n                <p>\r\n                  <span>Region:</span> {this.checkIfExist(country.region)}\r\n                </p>\r\n                <p>\r\n                  <span>Subregion:</span> {this.checkIfExist(country.subregion)}\r\n                </p>\r\n                <p>\r\n                  <span>Native name:</span>{\" \"}\r\n                  {this.checkIfExist(country.nativeName)}\r\n                </p>\r\n                <p>\r\n                  <span>Capital:</span> {this.checkIfExist(country.capital)}\r\n                </p>\r\n              </div>\r\n              <div className=\"country-sub-info-col-2\">\r\n                <p>\r\n                  <span>Population:</span>{\" \"}\r\n                  {this.checkIfExist(this.formatNumbers(country.population))}\r\n                </p>\r\n                <p>\r\n                  <span>Language:</span>{\" \"}\r\n                  {this.checkIfExist(this.reduceObjects(country.languages))}\r\n                </p>\r\n                <p>\r\n                  <span>Currency:</span>{\" \"}\r\n                  {this.checkIfExist(this.reduceObjects(country.currencies))}\r\n                </p>\r\n                <p>\r\n                  <span>Top level domain:</span>{\" \"}\r\n                  {this.checkIfExist(country.topLevelDomain)}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <p>\r\n              <a\r\n                className=\"wikipedia\"\r\n                target=\"blank\"\r\n                href={`https://en.wikipedia.org/wiki/` + country.name}\r\n              >\r\n                Wikipedia page\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"main-container\">\r\n        <div className=\"inputs-container\">\r\n          <button onClick={this.props.history.goBack}>Back</button>\r\n        </div>\r\n        {this.renderCountry()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(CountryPage);\r\n","import React from \"react\";\nimport Home from \"./components/Home\";\nimport Navbar from \"./components/Navbar\";\nimport \"./styles.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport CountryPage from \"./components/CountryPage\";\n\nconst App = () => {\n  const [darkMode, setDarkMode] = React.useState(getInitialMode());\n\n  React.useEffect(() => {\n    localStorage.setItem(\"darkMode\", JSON.stringify(darkMode));\n  }, [darkMode]);\n\n  function getInitialMode() {\n    const savedMode = JSON.parse(localStorage.getItem(\"darkMode\"));\n    return savedMode || false;\n  }\n\n  if (darkMode) {\n    document.body.style.backgroundColor = \"#212E37\";\n  } else {\n    document.body.style.backgroundColor = \"#FAFAFA\";\n  }\n\n  return (\n    <BrowserRouter>\n      <div className={darkMode ? \"dark-mode\" : \"light-mode\"}>\n        <Navbar toggle={setDarkMode} darkMode={darkMode} />\n        <Switch>\n          <Route exact path=\"/country-lookup\" component={Home} />\n          <Route path=\"/country-lookup/:country_id\" component={CountryPage} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}